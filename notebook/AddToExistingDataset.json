{
	"name": "AddToExistingDataset",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "1c0925b3-e901-47c1-9894-29f7d6f9102b"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"import os\r\n",
					"import csv\r\n",
					"import random\r\n",
					"\r\n",
					"_path = os.path.dirname(__file__)\r\n",
					"reader = csv.reader(open(f\"{_path}/../../modules/M365/test_data/DIPData/Roster/Person.csv\"))\r\n",
					"students = []\r\n",
					"buffer = 'SIS ID,FederalRaceCategory,PrimaryLanguage,ELLStatus,SpecialEducation,LowIncome\\n'\r\n",
					"for row in reader:\r\n",
					"    sis_id = row[7]\r\n",
					"    if sis_id.startswith('st'):\r\n",
					"        buffer += sis_id + ','\r\n",
					"        buffer += random.choices(['Asian', 'Black', 'White', 'Hispanic', 'American Indian'], weights=(15, 25, 30, 25, 5))[0] + ','\r\n",
					"        buffer += random.choices(['English', 'Spanish', 'German', 'French', 'Japanese'], weights=(85, 10, 2, 2, 1))[0] + ','\r\n",
					"        buffer += random.choices(['', 'English Learner', 'Initially Fluent English Proficient', 'Redesignated Fluent English Proficient'], weights=(80, 10, 5, 5))[0] + ','\r\n",
					"        buffer += random.choices(['', 'Designated Instruction Service', 'Resource Specialty Program', 'Special Day Class'], weights=(80, 10, 5, 5))[0] + ','\r\n",
					"        buffer += random.choices(['0', '1'], weights=(60, 40))[0] + '\\n'\r\n",
					"\r\n",
					"        student = {\r\n",
					"            'SIS ID': sis_id,\r\n",
					"            'FederalRaceCategory': random.choices(['Asian', 'Black', 'White', 'Hispanic', 'American Indian'], weights=(15, 25, 30, 25, 5))[0],\r\n",
					"            'PrimaryLanguage': random.choices(['English', 'Spanish', 'German', 'French', 'Japanese'], weights=(85, 10, 2, 2, 1))[0],\r\n",
					"            'ELLStatus': random.choices(['', 'English Learner', 'Initially Fluent English Proficient', 'Redesignated Fluent English Proficient'], weights=(80, 10, 5, 5))[0],\r\n",
					"            'SpecialEducation': random.choices(['', 'Designated Instruction Service', 'Resource Specialty Program', 'Special Day Class'], weights=(80, 10, 5, 5))[0],\r\n",
					"            'LowIncome': random.choices([0, 1], weights=(60, 40))[0]\r\n",
					"        }    \r\n",
					"        students.append(student)\r\n",
					"\r\n",
					"\r\n",
					"print(buffer)\r\n",
					"with open('mycsvfile.csv','w') as f:\r\n",
					"    f.write(buffer)\r\n",
					"    #w = csv.writer(f)\r\n",
					"    #w.writerow(students[0].keys())\r\n",
					"    #for student in students: w.writerow(student.values())\r\n",
					"\r\n",
					"\r\n",
					"\"\"\"\r\n",
					"for row in csv.DictReader(open(f\"{_path}/../../modules/M365/test_data/DIPData/Roster/Person.csv\")):\r\n",
					"    print(row)\r\n",
					"\r\n",
					"    student_id = row['SIS ID']\r\n",
					"    section_id = row['Section SIS ID']\r\n",
					"    attendance_code = get_random_attendance()\r\n",
					"    attendance_flag = int(attendance_code == 'P')\r\n",
					"    attendance_status = 'Present'\r\n",
					"    if attendance_code != 'P': attendance_status = 'Absent'\r\n",
					"    attendance_csv.write(f\"att_{str(index)},{student_id},2021,,{date_str},No,1,{section_id},{attendance_code},{attendance_flag},{attendance_status},ClassSectionAttendance,0\\n\")\r\n",
					"    index += 1\r\n",
					"\"\"\""
				],
				"execution_count": null
			}
		]
	}
}